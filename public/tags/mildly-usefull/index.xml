<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mildly Usefull on Magic Broccoli</title>
    <link>https://magicbroccoli.de/tags/mildly-usefull/</link>
    <description>Recent content in Mildly Usefull on Magic Broccoli</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-DE</language>
    <managingEditor>mightyBroccoli (nico)</managingEditor>
    <webMaster>mightyBroccoli (nico)</webMaster>
    <copyright>All rights reserved.</copyright>
    <lastBuildDate>Fri, 30 Mar 2018 13:37:00 +0200</lastBuildDate>
    
        <atom:link href="https://magicbroccoli.de/tags/mildly-usefull/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Let&#39;s Encrypt Prosody Cert Hook</title>
      <link>https://magicbroccoli.de/post/letsencrypt-prosody-cert-hook/</link>
      <pubDate>Fri, 30 Mar 2018 13:37:00 +0200</pubDate>
      <author>mightyBroccoli (nico)</author>
      <guid>https://magicbroccoli.de/post/letsencrypt-prosody-cert-hook/</guid>
      <description>

&lt;h3 id=&#34;prosody-let-s-encrypt-certificates&#34;&gt;Prosody + Let&amp;rsquo;s Encrypt certificates&lt;/h3&gt;

&lt;p&gt;As of right now Prosody is not able to update a live certificate while running. For the complete update it is necessary to restart Prosody, which is inconvenient.&lt;br&gt;
With the &lt;a href=&#34;https://prosody.im/doc/console&#34; target=&#34;_blank&#34;&gt;telnet console&lt;/a&gt; however, it is possible to reload the config such that a changed certificate is updated correctly. The biggest problem lies in reloading all possible locations the &amp;ldquo;old&amp;rdquo; certificate is still active in. I use the Prosody Telnet console to invoke a reload, due to the fact that &lt;code&gt;prosodyctl reload&lt;/code&gt; is not actually reloading the modules just the config.&lt;br&gt;
For this matter I hacked together a little bash script, which together with the &lt;a href=&#34;https://certbot.eff.org/&#34; target=&#34;_blank&#34;&gt;Let&amp;rsquo;sEncrypt&amp;rsquo;s certbot&lt;/a&gt; and the default letsecrypt cli is used to import and update the Prosody certificate without a need to restart the instanc.&lt;/p&gt;

&lt;h3 id=&#34;let-sencrypt-setup&#34;&gt;Let&amp;rsquo;sEncrypt Setup&lt;/h3&gt;

&lt;p&gt;To use this script in a fully automatic way some configuration is needed.
On install Let&amp;rsquo;sEncrypt creates the directory &lt;code&gt;renewal-hooks&lt;/code&gt;. Inside there are three subfolders which represent the time and/or occasion for invocation (&lt;a href=&#34;https://certbot.eff.org/docs/using.html#renewing-certificates&#34; target=&#34;_blank&#34;&gt;source&lt;/a&gt;). This script uses the deploy hook to only run when the certificate is actually renewed. As I am not checking the domain name after deployment it is needed to add another subdirectory to the deploy directory.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/etc/letsencrypt/renewal-hooks/
└── deploy
    └── example.de
        └── prosody.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&#34;deploy-hook&#34;&gt;Deploy-Hook&lt;/h4&gt;

&lt;p&gt;In this example code the hook is placed inside the &lt;code&gt;example.de&lt;/code&gt; folder as &lt;code&gt;prosody.sh&lt;/code&gt;. The script first imports the defined list of domains from the Let&amp;rsquo;s Encrypt live directory. After this is finished reloading takes place. The import is done as described in the &lt;a href=&#34;https://prosody.im/doc/letsencrypt&#34; target=&#34;_blank&#34;&gt;Prosody Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;### Prosody Cert Import ###
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# active domains
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;domains&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example.de&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# import the new certs
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; domain in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;domains[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
	prosodyctl --root cert import $domain /etc/letsencrypt/live
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# modules needing to be reloaded
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;modules&lt;span style=&#34;color:#f92672&#34;&gt;=(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s2s&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c2s&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tls&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# loop over commands
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; command in &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;modules[@]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
        echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;module:reload([[&lt;/span&gt;$command&lt;span style=&#34;color:#e6db74&#34;&gt;]])&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;config:reload()&amp;#34;&lt;/span&gt;
echo quit
&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;| nc localhost &lt;span style=&#34;color:#ae81ff&#34;&gt;5582&lt;/span&gt; &amp;amp;&amp;gt;/dev/null

&lt;span style=&#34;color:#75715e&#34;&gt;# exit gracefully
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;exit &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;let-sencrypt-renewal-config&#34;&gt;Let&amp;rsquo;sEncrypt Renewal config&lt;/h3&gt;

&lt;p&gt;At this time certbot would not run any deploy hook after renewing a certificate. The default configuration invokes &lt;code&gt;/bin/run-parts&lt;/code&gt; on the predefined folders &lt;code&gt;pre&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt; and &lt;code&gt;deploy&lt;/code&gt;. To run the script on deployment it is needed to add the directory to the renew config file of your domain. For this example I choose to use example.de which would resolve to &lt;code&gt;/etc/letsencrypt/renewal/example.de.conf&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;renewalparams&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
...
renew_hook &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; /bin/run-parts /etc/letsencrypt/renewal/example.de
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&#34;todo&#34;&gt;TODO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Prosody archives the &amp;ldquo;old&amp;rdquo; certificates when importing a new one. After a while the directory is pretty cluttered.&lt;/li&gt;
&lt;li&gt;implement $RENEWED_DOMAINS test to deploy hook without the need to reconfigure&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Prosody housekeeping</title>
      <link>https://magicbroccoli.de/post/prosody-housekeeping/</link>
      <pubDate>Mon, 02 Oct 2017 13:30:00 +0200</pubDate>
      <author>mightyBroccoli (nico)</author>
      <guid>https://magicbroccoli.de/post/prosody-housekeeping/</guid>
      <description>

&lt;h1 id=&#34;grundidee&#34;&gt;Grundidee&lt;/h1&gt;

&lt;p&gt;Ich habe mich in den letzen paar Tagen damit beschäftigt Dinge rund um den Prosody Server zu automatisieren.
Daher möchte ich hier einfach mal meine Lösung einiger kleiner Probleme vorstellen.&lt;/p&gt;

&lt;h1 id=&#34;problem&#34;&gt;Problem&lt;/h1&gt;

&lt;p&gt;Das grundsätzliche Problem, welches so ziemlich alle Server mit offener Registrierung teilen, sind Zombie Accounts. Sprich Accounts die erstellt wurden, allerdings nie verwendet werden. Oder Accounts die erstellt wurden und irgendwann von ihrem Nutzer/in nicht mehr verwendet werden. Solche Accounts verursachen eine vermeidbare Last für das System.&lt;br&gt;
Die zweite größere Quelle liegt in einem Problem Prosodys Dateien oder Datenbank Einträge korrekt bzw. überhaupt zu löschen. Namentlich sind hier &lt;a href=&#34;https://modules.prosody.im/mod_http_upload.html&#34; target=&#34;_blank&#34;&gt;mod_http_upload&lt;/a&gt; und &lt;a href=&#34;https://modules.prosody.im/mod_mam.html&#34; target=&#34;_blank&#34;&gt;mod_mam&lt;/a&gt; zu nennen.
Vor allem bei dem Modul mam bestehen Probleme, da die Einträge eines jeden Users einzeln bearbeitet werden. Daher steigt die Bearbeitungszeit bei größeren Userzahlen enorm an.&lt;/p&gt;

&lt;h1 id=&#34;lösungsansatz&#34;&gt;Lösungsansatz&lt;/h1&gt;

&lt;p&gt;Als Lösungsansatz habe ich ein einfaches Skript geschrieben, das tägliche &amp;ldquo;housekeeping&amp;rdquo; Aufgaben für mich übernimmt.&lt;br&gt;
&lt;a href=&#34;https://thomas-leister.de/&#34; target=&#34;_blank&#34;&gt;Thomas Leister&lt;/a&gt; hat vor einiger Zeit einen sehr ähnlichen &lt;a href=&#34;https://thomas-leister.de/prosody-inaktive-accounts-loeschen&#34; target=&#34;_blank&#34;&gt;Lösungsansatz&lt;/a&gt; veröffentlicht, den ich in meinem Skript erweitert habe, um ihn vollständig zu automatisieren.&lt;br&gt;
Das im Folgenden beschriebene Skript steht auf &lt;a href=&#34;https://github.com/mightyBroccoli/prosody_housekeeping&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; zur Verfügung.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WARNUNG&lt;/strong&gt;: Das Skript verfügt über einen &lt;em&gt;configtest&lt;/em&gt;; durch das ausführen mit &lt;code&gt;--configtest&lt;/code&gt; oder &lt;code&gt;-t&lt;/code&gt; werden alle Filter angewendet, ohne das Einträge gelöscht werden. So ist es möglich anschauenlich zu sehen was bei einem ausführen passiert wäre. Es ist äußerste Vorsicht geboten beim konfigurieren des Skripts, daher ist ein testen der Konfiguration sehr empfohlen.&lt;/p&gt;

&lt;h1 id=&#34;skript&#34;&gt;Skript&lt;/h1&gt;

&lt;p&gt;Das Skript arbeitet nacheinander alle diese Probleme ab und beseitigt diese Probleme in mehreren Schritten ohne das Usereingaben notwendig sind.&lt;br&gt;&lt;/p&gt;

&lt;h2 id=&#34;konfiguration&#34;&gt;Konfiguration&lt;/h2&gt;

&lt;p&gt;Für die Verwendung des Skriptes werden zwei Module benötigt. Diese sollten im Modul Verzeichnis von Prosody vorhanden sein.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://modules.prosody.im/mod_list_inactive.html&#34; target=&#34;_blank&#34;&gt;mod_list_inactive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://modules.prosody.im/mod_lastlog.html&#34; target=&#34;_blank&#34;&gt;mod_lastlog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;mod_lastlog lässt sich einfach in die modules_enabled{} Sektion der Prosody Konfiguration eintragen. Für das Modul ist keine weitere Konfiguration notwendig.
Der einfachste Weg ist, das gesamte Mercurial Archiv der Community Module zu klonen und in der Prosody Konfiguration zu referenzieren. Eine Anleitung wie das geht findet sich in der Prosody &lt;a href=&#34;https://prosody.im/doc/installing_modules#prosody-modules&#34; target=&#34;_blank&#34;&gt;Dokumentation&lt;/a&gt;.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Nun sollte im Skript selbst, über die Variabeln, eingestellt werden was für Zeiteinheiten gewünscht sind. Außerdem sollten eventuell abweichende Pfade auf die jeweiligen Systemverhältnisse angepasst werden.&lt;br&gt;
Der Folgende Abschnitt zeigt einen Ausschnitt aus dem Skript, welcher die Konfigurationsvariablen, die Filter sowie den &lt;code&gt;--configtest&lt;/code&gt; catch zeigt.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;###### CONFIGURATION ######
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# configuration variables
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;tmp_directory&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/tmp/prosody/
junk_to_delete&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$tmp_directory/accounts_to_delete.txt

&lt;span style=&#34;color:#75715e&#34;&gt;# maximum timeframe for accounts registered but not logged in
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# needs to be in the syntax 1day 2weeks 3months 4years
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;unused_accounts_timeframe&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;14days&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# maxium timeframe for accounts since last login
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;old_accounts_timeframe&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1year&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# maximum age of mod_mam messags stored in the database
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;enable_mam_clearing&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false
&lt;span style=&#34;color:#75715e&#34;&gt;# needs to be in mysql syntax 1 DAY 2 MONTH 3 YEAR
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;mam_message_live&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2 MONTH&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# prosody mysql login credentials
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;prosody_db_user&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;prosody&amp;#34;&lt;/span&gt;
prosody_db_password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;super_secret-password1337&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# http upload path
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;http_upload_path&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/var/lib/prosody/http_upload&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# http upload lifetime in days
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;http_upload_expire&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;31&amp;#34;&lt;/span&gt;

catch_configtest&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;# test your configuration first to see what would have be deleted
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-t&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--configtest&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
		filter_unused_accounts
		filter_old_accounts
		filter_mam_messages --test

		cat $junk_to_delete
		exit
	&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;###### FILTER SECTION ######
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;filter_unused_accounts&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;# filter all registered but not logged in accounts older then $unused_accounts_timeframe
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	prosodyctl mod_list_inactive magicbroccoli.de &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$unused_accounts_timeframe&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; event | grep registered | sed &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/registered//g&amp;#39;&lt;/span&gt; | sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/^/prosodyctl deluser /&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; $junk_to_delete
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

filter_old_accounts&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;# filter all inactive accounts older then $old_accounts_timeframe
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	prosodyctl mod_list_inactive magicbroccoli.de &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$old_accounts_timeframe&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; | sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/^/prosodyctl deluser /&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; $junk_to_delete
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

filter_mam_messages&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;# only run this filter if $enable_mam_clearing is set to true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$enable_mam_clearing&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
		&lt;span style=&#34;color:#75715e&#34;&gt;# catch config test
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--test&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
			&lt;span style=&#34;color:#75715e&#34;&gt;# this is currently a workaround caused by the extrem slowness of prosodys own clearing mechanism
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;			&lt;span style=&#34;color:#75715e&#34;&gt;# filter all expired mod_mam messages from archive
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;			echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SELECT * FROM prosody.prosodyarchive WHERE \`when\` &amp;lt; UNIX_TIMESTAMP(DATE_SUB(curdate(),INTERVAL &lt;/span&gt;$mam_message_live&lt;span style=&#34;color:#e6db74&#34;&gt;));&amp;#34;&lt;/span&gt; | mysql -u $prosody_db_user -p$prosody_db_password &amp;amp;&amp;gt;&amp;gt; $junk_to_delete
			&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
		&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
		&lt;span style=&#34;color:#75715e&#34;&gt;# this is currently a workaround caused by the extrem slowness of prosodys own clearing mechanism
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		&lt;span style=&#34;color:#75715e&#34;&gt;# delete all expired mod_mam messages from archive
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;		echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DELETE FROM prosody.prosodyarchive WHERE \`when\` &amp;lt; UNIX_TIMESTAMP(DATE_SUB(curdate(),INTERVAL &lt;/span&gt;$mam_message_live&lt;span style=&#34;color:#e6db74&#34;&gt;));&amp;#34;&lt;/span&gt; | mysql -u $prosody_db_user -p$prosody_db_password
	&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;

filter_expired_http_uploads&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color:#75715e&#34;&gt;# currently a workaround as the mod_http_uploud is not removing the folder which holds the file
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	find $http_upload_path/* -maxdepth &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; -type d -mtime +$http_upload_expire | sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/^/rm -rf /&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; $junk_to_delete
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TeamSpeak XMPP Push</title>
      <link>https://magicbroccoli.de/post/ts-xmpp-push/</link>
      <pubDate>Thu, 22 Jun 2017 14:15:25 +0200</pubDate>
      <author>mightyBroccoli (nico)</author>
      <guid>https://magicbroccoli.de/post/ts-xmpp-push/</guid>
      <description>

&lt;h2 id=&#34;idee&#34;&gt;Idee&lt;/h2&gt;

&lt;p&gt;Die Idee hinter diesem Skript ist, dass ein Admin/ Moderatoren nicht dauerhaft mit einem Server verbunden sein kann, um nach dem Rechten zu sehen.&lt;br&gt;
Dieses Problem versuche ich hiermit anzugehen. Dafür durchsucht dieses nach verschiedenen Regeln die Logfiles, gefundene Zeilen werden anschließend an definierte Kontakte per XMPP sendet.&lt;/p&gt;

&lt;h3 id=&#34;nutzen&#34;&gt;Nutzen&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;IMHO&lt;/strong&gt; gibt es genügend Beispiele, in denen eine schnellstmögliche Benachrichtigung sehr praktisch ist. Viele Server unterstützen eine Reihe von &amp;ldquo;Automatischen Moderationen&amp;rdquo;, dennoch finden User Möglichkeiten diese zu behindern oder sogar zu umgehen. Durch eine kurze Benachrichtigung ist es dem Admin/ Moderator möglich zu überblicken, was betroffen ist und ob sofortiges handeln notwendig ist.&lt;br&gt;
Je nach Häufigkeit der Ausführung können die Benachrichtigung innerhalb von Sekunden gepushed werden.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---- Group change ----
--- added ---
2017-05-12 18:56:38.609377|INFO    |VirtualServer |1  |client (id:USER A) was added to servergroup &#39;SERVERGROUP NAME&#39;(id:SERVERGROUP ID) by client &#39;USERNAME&#39;(id:USER B)
2017-05-12 22:09:01.658969|INFO    |VirtualServer |1  |client (id:USER ID) was added to servergroup &#39;SERVERGROUP NAME&#39;(id:SERVERGROUP ID) by client &#39;USERNAME&#39;(id:USER ID)
---- Group change End ----
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;filter&#34;&gt;Filter&lt;/h2&gt;

&lt;h4 id=&#34;server&#34;&gt;Server&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Accounting&lt;/li&gt;
&lt;li&gt;ServerMain&lt;/li&gt;
&lt;li&gt;Warning&lt;/li&gt;
&lt;li&gt;ERROR&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;user-spezifisch&#34;&gt;User spezifisch&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Complaint&lt;/li&gt;
&lt;li&gt;Kick&lt;/li&gt;
&lt;li&gt;Ban ( added and deleted )&lt;/li&gt;
&lt;li&gt;Group change&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;channel&#34;&gt;Channel&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;creation&lt;/li&gt;
&lt;li&gt;deletion&lt;/li&gt;
&lt;li&gt;changed&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;github&#34;&gt;Github&lt;/h2&gt;

&lt;p&gt;Das Projekt ist gehostet auf &lt;a href=&#34;https://github.com/mightyBroccoli/logwatch-scripts&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;. Dort ist auch ein Bereich für &lt;a href=&#34;https://github.com/mightyBroccoli/logwatch-scripts/issues&#34; target=&#34;_blank&#34;&gt;Github - Issues&lt;/a&gt;, falls Probleme auftreten oder Verbesserungsvorschläge bestehen.&lt;/p&gt;

&lt;h2 id=&#34;debian-9&#34;&gt;Debian 9&lt;/h2&gt;

&lt;p&gt;Leider besteht mit Debian Stretch ein Problem mit perl wodurch &lt;em&gt;sendxmpp&lt;/em&gt;, das xmpp cli Modul des Skripts nicht mehr funktioniert. Leider kann ich da im Moment erst mal nichts machen, aber ich repariere das Skipt für Debian Stretch, sobald es möglich ist.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Update : 28.07.2017 Debian 9 Perl5 Problematik
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Use of uninitialized value in numeric eq &lt;span style=&#34;color:#f92672&#34;&gt;(==)&lt;/span&gt; at /usr/share/perl5/XML/Stream.pm line &lt;span style=&#34;color:#ae81ff&#34;&gt;631&lt;/span&gt;.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Ich hab mit etwas debugging herausgefunden, welche Zeilen geändert werden müssen, um perl-xmlstream wieder zu fixxen.
Die Datei &lt;code&gt;/usr/share/perl5/XML/Stream.pm&lt;/code&gt; müsste geändert werden. (Pfad kann abweichen je nach OS)
Mit nano lässt sich bequem nach der Zeile suchen, mit Shift + W. Danach ändert man Zeile 631.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;$self&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{SIDS}&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{default}&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{ssl_ca_path} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
zu
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-perl&#34; data-lang=&#34;perl&#34;&gt;$self&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{SIDS}&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{default}&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{ssl_ca_path} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/etc/ssl/certs&amp;#39;&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
Nach dieser Änderung hat sich das Problem eingestellt und sendxmpp funktionierte wieder genauso tadellos wie zuvor.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>